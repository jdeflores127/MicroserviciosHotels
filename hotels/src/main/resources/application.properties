spring.datasource.url=jdbc:h2:mem:bookingdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=sa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=update

server.port=8080

#Configuracion para el servidor de configuracion externalizado
spring.application.name=hotels
spring.profiles.active=dev
#apuntamos a la ruta del microservicio, el optional indica que si el servicio no esta activo
#No detenga el arranque del servicio hotels
spring.cloud.config.enabled=true
spring.config.import=optional:configserver:http://localhost:8085/

#Propiedades para la suscripcion al servicio Eureka de descubrimiento
eureka.instance.prefer-ip-address=true
#Propiedad para registrarse en Eureka
eureka.client.register-with-eureka=true
#Busca informacion de registro en Eureka
eureka.client.fetch-registry=true
#Direccion del servidor Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8065/eureka/

#Propiedades para informacion cuando se consulte por actuator
info.app.name=Hotels microservices
info.app.descripcion=aplicacion para reservar habitaciones
info.app.version=1.0.0
#endpoint.shutdown.enable=true
management.endpoint.shutdown.enabled=true
#Expone todos los endpoint de actuator
management.endpoints.web.exposure.include=*
#muestra en el navegador la informacion del microservicio
management.info.env.enabled=true

#Configuraciones de Circuit Breaker
#Habilitar circuit breaker en feign
spring.cloud.openfeign.circuitbreaker.enabled=true
spring.cloud.openfeign.circuitbreaker.alphanumeric-ids.enabled=true
#Registro de salud en actuator
resilience4j.circuitbreaker.configs.default.register-health-indicator=true
#El servicio tendra un minimo de llamadas antes de activar circuit breaker
resilience4j.circuitbreaker.instances.getRoomsByIdHotelCB.minimum-number-of-calls=7
#Si mas del 50% de peticiones fallan, el circuit breaker estara en estado abierto
resilience4j.circuitbreaker.instances.getRoomsByIdHotelCB.failure-rate-threshold=50
#Duracion del estado abierto
resilience4j.circuitbreaker.instances.getRoomsByIdHotelCB.wait-duration-in-open-state=20000
#En estado semiabierto permite 3 llamadas, si de esas 3 llamadas falla el 50% continua en estado abierto
resilience4j.circuitbreaker.instances.getRoomsByIdHotelCB.permitted-number-of-calls-in-half-open-state=3

#Configuraciones del patron retry
#Maximo de veces a intentar
resilience4j.retry.instances.getRoomsByIdHotelRetry.max-attempts=3
#Espera un segundo y medio despues de cada reintento
resilience4j.retry.instances.getRoomsByIdHotelRetry.wait-duration=1500

#Loggin
logging.file.path=/Users/alex/Documents/Desarrollo/JavaWorkspace/Microservicios/logs
